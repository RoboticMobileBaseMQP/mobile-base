<launch>

  <!-- Launch the gazebo simulator and spawn the robot -->
    <!-- Gazebo & GUI Configuration -->
  <arg name="gazebo"      default="true"  doc="Should the gazebo simulation be launched? Use false in case if you want to include this file and launch gazebo yourself" />
  <arg name="paused"      default="false" doc="Should the simulation directly be stopped at 0s?" />
  <arg name="world"       default="worlds/empty.world" doc="Filename to a SDF World for gazebo to use" />
  <arg name="rviz"        default="false" doc="Should RVIz be launched?" />

  <!-- Robot Customization -->
  <arg name="arm_id"      default="panda" doc="Name of the panda robot to spawn" />
  <arg name="use_gripper" default="true"  doc="Should a franka hand be mounted on the flange?" />
  <arg name="controller"  default="cartesian_impedance_example_controller"     doc="Which example controller should be started? (One of {cartesian_impedance,model,force}_example_controller)" />
  <arg name="x"           default="0"     doc="How far forward to place the base of the robot in [m]?" />
  <arg name="y"           default="0"     doc="How far leftwards to place the base of the robot in [m]?" />
  <arg name="z"           default="0"     doc="How far upwards to place the base of the robot in [m]?" />
  <arg name="roll"        default="0"     doc="How much to rotate the base of the robot around its X-axis in [rad]?" />
  <arg name="pitch"       default="0"     doc="How much to rotate the base of the robot around its Y-axis in [rad]?" />
  <arg name="yaw"         default="0"     doc="How much to rotate the base of the robot around its Z-axis in [rad]?" />
  <arg name="initial_joint_positions"
       doc="Initial joint configuration of the panda. Specify as a list of name/value pairs in form of '-J [name-of-joint] [value-in-rad]'. Default is a 90 degree bend in the elbow"
       default="-J $(arg arm_id)_joint1 0
                -J $(arg arm_id)_joint2 0
                -J $(arg arm_id)_joint3 0
                -J $(arg arm_id)_joint4 -1.57079632679
                -J $(arg arm_id)_joint5 0
                -J $(arg arm_id)_joint6 1.57079632679
                -J $(arg arm_id)_joint7 0.785398163397"
       />

  <include file="$(find gazebo_ros)/launch/empty_world.launch" if="$(arg gazebo)">
    <arg name="world_name" value="$(arg world)"/>
    <arg name="paused" value="true"/>
    <arg name="use_sim_time" value="true"/>
  </include>

  <!-- Load translation controller parameters to param server-->  
  <rosparam file="$(find panda_insert_control)/config/panda_insert_control.yaml" command="load" />
  <rosparam file="$(find panda_insert_control)/config/panda_control.yaml" command="load" />

  <!-- <group ns="$(arg arm/_id)"> -->
  <!-- </group> -->

    <!-- Load robot description-->
    <param name="robot_description" command="xacro --inorder $(find panda_insert_description)/urdf/panda_insert.xacro"/>

    <!-- Spawn panda_insert robot -->
    <node name="spawn_franka_urdf" pkg="gazebo_ros" type="spawn_model"
  	args="-param robot_description -urdf -model robot" output="screen" />

    <!-- Launch arm controllers -->
    <!-- <node name="panda_moveit_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" 
      args="joint_state_controller gazebo_ros_control panda_finger1_controller panda_finger2_controller" ns="/panda" /> -->
    
    <!-- Launch insert controllers -->
    <node name="insert_position_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" args="panda_x_joint_controller
                            panda_y_joint_controller
                            panda_z_joint_controller
                            panda_z_rotation_controller" ns="/panda" />
    
    <!-- Launch robot_state_publisher -->
    <node name="panda_moveit_robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true">
      <remap from="joint_states" to="panda/joint_states" />
    </node>

    <!-- Launch moveit -->
    <!-- <include file="$(find panda_moveit_config)/launch/move_group.launch">
      <remap from="joint_states" to="panda/joint_states" />
    </include> -->

  <node  pkg="rviz" type="rviz" output="screen" name="rviz" if="$(arg rviz)"/>

</launch>